{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["locales","en-US","require","localizer","dateFnsLocalizer","format","parse","startOfWeek","getDay","events","title","allDay","start","Date","end","App","_useState","useState","_useState2","Object","slicedToArray","newEvent","setNewEvent","_useState3","_useState4","allEvents","setAllEvents","react_default","a","createElement","className","type","placeholder","style","width","marginRight","value","onChange","e","objectSpread","target","display","justifyContent","marginLeft","react_datepicker_min_default","placeholderText","margin","selected","stlye","marginTop","onClick","concat","toConsumableArray","react_big_calendar_esm","startAccessor","endAccessor","height","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"sOAWMA,eAAU,CACdC,QAASC,EAAQ,MAEbC,EAAYC,YAAiB,CACjCC,iBACAC,gBACAC,sBACAC,iBACAR,YAGIS,EAAS,CACb,CACEC,MAAO,cACPC,QAAQ,EACRC,MAAO,IAAIC,KAAK,KAAM,EAAG,GACzBC,IAAK,IAAID,KAAK,KAAM,EAAG,IAEzB,CACEH,MAAO,WACPE,MAAO,IAAIC,KAAK,KAAM,EAAG,GACzBC,IAAK,IAAID,KAAK,KAAM,EAAG,KAEzB,CACEH,MAAO,aACPE,MAAO,IAAIC,KAAK,KAAM,EAAG,IACzBC,IAAK,IAAID,KAAK,KAAM,EAAG,MAqDZE,MAjDf,WAAe,IAAAC,EACmBC,mBAAS,CAAEP,MAAO,GAAIE,MAAO,GAAIE,IAAK,KADzDI,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNK,EADMH,EAAA,GACII,EADJJ,EAAA,GAAAK,EAEqBN,mBAASR,GAF9Be,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAENE,EAFMD,EAAA,GAEKE,EAFLF,EAAA,GAQb,OACEG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACEE,KAAK,OACLC,YAAY,YACZC,MAAO,CAAEC,MAAO,MAAOC,YAAa,QACpCC,MAAOf,EAASX,MAChB2B,SAAU,SAACC,GAAD,OAAOhB,EAAYH,OAAAoB,EAAA,EAAApB,CAAA,GAAKE,EAAN,CAAgBX,MAAO4B,EAAEE,OAAOJ,YAE9DT,EAAAC,EAAAC,cAAA,OAAKI,MAAO,CAAEQ,QAAS,OAAQC,eAAe,gBAAiBR,MAAO,MAAOS,WAAY,QACvFhB,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CACEiB,gBAAgB,aAChBZ,MAAO,CAAEa,OAAQ,KACjBC,SAAU1B,EAAST,MACnByB,SAAU,SAACzB,GAAD,OAAWU,EAAYH,OAAAoB,EAAA,EAAApB,CAAA,GAAKE,EAAN,CAAgBT,cAElDe,EAAAC,EAAAC,cAACe,EAAAhB,EAAD,CACEiB,gBAAgB,WAChBZ,MAAO,CAAEa,OAAQ,KACjBC,SAAU1B,EAASP,IACnBuB,SAAU,SAACvB,GAAD,OAASQ,EAAYH,OAAAoB,EAAA,EAAApB,CAAA,GAAKE,EAAN,CAAgBP,aAGlDa,EAAAC,EAAAC,cAAA,UAAQmB,MAAO,CAAEC,UAAW,QAAUC,QA9B5C,WACExB,EAAY,GAAAyB,OAAAhC,OAAAiC,EAAA,EAAAjC,CAAKM,GAAL,CAAgBJ,OA6BxB,cAIFM,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACElD,UAAWA,EACXM,OAAQgB,EACR6B,cAAc,QACdC,YAAY,MACZtB,MAAO,CAAEuB,OAAQ,IAAKV,OAAQ,YCxEvBW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAtB,EAAA,GAAAuB,KAAAD,EAAAE,KAAA,WAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDdW,IAASC,OACP3C,EAAAC,EAAAC,cAACF,EAAAC,EAAM2C,WAAP,KACE5C,EAAAC,EAAAC,cAAC2C,EAAD,OAEFC,SAASC,eAAe,SAM1BjB","file":"static/js/main.15977168.chunk.js","sourcesContent":["import format from \"date-fns/format\";\nimport getDay from \"date-fns/getDay\";\nimport parse from \"date-fns/parse\";\nimport startOfWeek from \"date-fns/startOfWeek\";\nimport React, { useState } from \"react\";\nimport { Calendar, dateFnsLocalizer } from \"react-big-calendar\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./App.css\";\n\nconst locales = {\n  \"en-US\": require(\"date-fns/locale/en-US\"),\n};\nconst localizer = dateFnsLocalizer({\n  format,\n  parse,\n  startOfWeek,\n  getDay,\n  locales,\n});\n\nconst events = [\n  {\n    title: \"Big Meeting\",\n    allDay: true,\n    start: new Date(2021, 6, 0),\n    end: new Date(2021, 6, 0),\n  },\n  {\n    title: \"Vacation\",\n    start: new Date(2021, 6, 7),\n    end: new Date(2021, 6, 10),\n  },\n  {\n    title: \"Conference\",\n    start: new Date(2021, 6, 20),\n    end: new Date(2021, 6, 23),\n  },\n];\n\nfunction App() {\n  const [newEvent, setNewEvent] = useState({ title: \"\", start: \"\", end: \"\" });\n  const [allEvents, setAllEvents] = useState(events);\n\n  function handleAddEvent() {\n    setAllEvents([...allEvents, newEvent]);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Calendar</h1>\n      <h2>Add New Event</h2>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Add Title\"\n          style={{ width: \"20%\", marginRight: \"10px\" }}\n          value={newEvent.title}\n          onChange={(e) => setNewEvent({ ...newEvent, title: e.target.value })}\n        />\n        <div style={{ display: \"flex\", justifyContent:\"space-between\", width: \"50%\", marginLeft: \"25%\" }}>\n          <DatePicker\n            placeholderText=\"Start Date\"\n            style={{ margin: \"0\" }}\n            selected={newEvent.start}\n            onChange={(start) => setNewEvent({ ...newEvent, start })}\n          />\n          <DatePicker\n            placeholderText=\"End Date\"\n            style={{ margin: \"0\" }}\n            selected={newEvent.end}\n            onChange={(end) => setNewEvent({ ...newEvent, end })}\n          />\n        </div>\n        <button stlye={{ marginTop: \"10px\" }} onClick={handleAddEvent}>\n          Add Event\n        </button>\n      </div>\n      <Calendar\n        localizer={localizer}\n        events={allEvents}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        style={{ height: 500, margin: \"50px\" }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}